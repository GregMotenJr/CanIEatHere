@model CanIEatHere.Models.Review

@{
    ViewBag.Title = "Edit";
}
<link href="~/Content/createPageStyling.css" rel="stylesheet" />

@*Custom CSS here:*@
<link href="~/Content/custom-REVIEW.css" rel="stylesheet" />

@*Animate CSS:*@
<link href="~/Content/animate.css" rel="stylesheet" />

@*Custom jQuery here:*@
<script src="~/Scripts/custom-jquery-REVIEW.js"></script>

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReviewID)

        <div class="form-group">
            @Html.LabelFor(model => model.NumFoodOptions, "How many menu options did you have?", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.NumFoodOptions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumFoodOptions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumFoodOptionsRating, "Rate your number of options (1 for awful, 5 for awesome)", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.NumFoodOptionsRating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumFoodOptionsRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GeneralComments, "Tell us about your experience", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.GeneralComments, new { @class = "form-control", @rows = "5", @placeholder = "What did you eat ? How did you like it ?" })
                @Html.ValidationMessageFor(model => model.GeneralComments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OverallRating, "Rate your experience overall (1 for awful, 5 for awesome)", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.OverallRating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OverallRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.TimeStamp, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TimeStamp, new { htmlAttributes = new { @class = "form-control", id = "timeStamp" } })
                @Html.ValidationMessageFor(model => model.TimeStamp, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group hide">
            @Html.LabelFor(model => model.RestaurantID, "RestaurantID", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("RestaurantID", null, htmlAttributes: new { @class = "form-control", id = "restaurantId" })
                @Html.ValidationMessageFor(model => model.RestaurantID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RestaurantPriceRating, "How expensive was this restaurant (1 for cheap 5 for expensive)", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RestaurantPriceRating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RestaurantPriceRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.Img1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Img1, new { htmlAttributes = new { @class = "form-control", id = "firstImage" } })
                @Html.ValidationMessageFor(model => model.Img1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.Img2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Img2, new { htmlAttributes = new { @class = "form-control", id = "secondImage" } })
                @Html.ValidationMessageFor(model => model.Img2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.Img3, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Img3, new { htmlAttributes = new { @class = "form-control", id = "thirdImage" } })
                @Html.ValidationMessageFor(model => model.Img3, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4 class="smallMarginBottom">Food Items Reviewed:</h4>
        <div class="row">
            @foreach (var item in ViewBag.FoodItems)
            {
                <div class="col-md-4 col-sm-12 darkerBackground smallMarginBottom smallMarginRight">
                    <p class="text-center">@item.FoodItemName</p>
                    <div class="row">
                        <div class="col-md-4">
                            <p>Food Item Rating: </p>
                            <p>Course: </p>
                            <p>Ingredients:</p>
                        </div>
                        <div class="col-md-8">
                            <p>@item.FoodItemRating</p>
                            <p>@ViewBag.Course</p>
                            <p>@item.ListIngredients</p>
                        </div>
                    </div>
                    <div class="row darkerBackground ">
                        <p class="text-center">Friendly for:</p>
                        <p class="col-md-4">@ViewBag.DietaryRestriction1</p>
                        <p class="col-md-4">@ViewBag.DietaryRestriction2</p>
                        <p class="col-md-4">@ViewBag.DietaryRestriction3</p>
                        @{ int foodItemID = @item.FoodItemID;  }
                    </div>
                    <p class="col-md-2"><button class="btn">@Html.ActionLink("Edit", "Edit", new { id = item.FoodItemID })</button></p>
                    <p class="col-md-2"><button class="btn">@Html.ActionLink("Delete", "Delete", new { id = item.FoodItemID })</button></p>
                </div>
                            }
        </div>

        <div class="row darkerBackground smallMarginTopBottom">
            <div class="col-md-offset-2 col-md-10">
                <div class="form-group text-center col-md-5 col-sm-12">
                    <div>
                        <p>Edit or delete food items.</p>
                        <input type="submit" value="Continue" name="action" class="btn btn-default" />
                    </div>
                </div>
                <div class="form-group text-center col-md-6 col-sm-12">
                    <div>
                        <p>Save review without editing food items.</p>
                        <input type="submit" value="Save" name="action" class="btn btn-default" />
                    </div>
                </div>
            </div>

        </div>
    </div>


                            }

<!--This needs to be outside the "using" statement-->
<!--DISPLAY THE UPLOADED IMAGE-->
<section id="filestack">

    @*<div class="text-center col-md-12">
            <input type="button" value="Upload Photos" id="fileStackButton" class="btn btn-primary" />
        </div>*@

    <!--DISPLAY THE UPLOADED IMAGE-->
    <div class="container-fluid text-center" id="containerForImageControls">
        <div id="image-container" class="row text-center">
        </div>
    </div>
    <div id="addImagesControls" class="text-center smallMarginTopBottom">
        <h3>Are these all the photos you want in your review?</h3>
        <button id="getUrl" class="btn btn-primary">Yes! Add these photos!</button>
    </div>
</section>

<div>
    @Html.ActionLink("Back to Review", "Details", new { id = Model.ReviewID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    //set TimeStamp field to current datetime
    var currentDate = new Date().toLocaleString();
    $('#timeStamp').val(currentDate);

    displayImagesForEdit();
    addAddImagesButton();
    $('#image-container').on('click', '.deleteImage', deleteSelectedImage);
    $('#containerForImageControls').on('click', '#addAnother', addMoreImages);
    $('#getUrl').click(storeImagesInReview);
    $('#getUrl').click(function () {
        $("#addImagesControls").html("<h3>Great! Your images have been added!</h3>");
        $("#addAnother").hide();
    });
</script>
